import yfinance as yf

# Initialize an empty portfolio
portfolio = []

def get_stock_data(ticker):
    """Fetch real-time stock data for the given ticker."""
    stock = yf.Ticker(ticker)
    info = stock.info
    return {
        "ticker": ticker.upper(),
        "name": info.get("shortName", "N/A"),
        "price": round(info.get("regularMarketPrice", 0), 2),
        "change": round(info.get("regularMarketChange", 0), 2),
    }

def display_portfolio():
    """Display all stocks in the portfolio."""
    if not portfolio:
        print("\nYour portfolio is empty!")
        return
    print("\nPortfolio:")
    print("{:<10} {:<20} {:<10} {:<10}".format('Ticker', 'Company', 'Price', 'Change'))
    print("-" * 50)
    for stock in portfolio:
        print("{:<10} {:<20} {:<10} {:<10}".format(stock['ticker'], stock['name'], stock['price'], stock['change']))

def add_stock():
    """Add a stock to the portfolio."""
    ticker = input("\nEnter stock ticker (e.g., AAPL): ").upper()
    stock_data = get_stock_data(ticker)
    portfolio.append(stock_data)
    print(f"Added {stock_data['name']} ({stock_data['ticker']}) to your portfolio.")

def remove_stock():
    """Remove a stock from the portfolio."""
    ticker = input("\nEnter stock ticker to remove (e.g., AAPL): ").upper()
    global portfolio
    portfolio = [stock for stock in portfolio if stock['ticker'] != ticker]
    print(f"Removed {ticker} from your portfolio.")

def main():
    """Main function to interact with the user."""
    while True:
        print("\nStock Portfolio Tracker")
        print("1. Add a Stock")
        print("2. Remove a Stock")
        print("3. Display Portfolio")
        print("4. Exit")
        
        choice = input("Choose an option: ")
        
        if choice == '1':
            add_stock()
        elif choice == '2':
            remove_stock()
        elif choice == '3':
            display_portfolio()
        elif choice == '4':
            print("Exiting the application.")
            break
        else:
            print("Invalid option! Please try again.")

if __name__ == "__main__":
    main()
